一、php环境的搭建及简介
	１．xammp（集成阿帕奇、ＰＨＰ、ＭｙＳＱＬ）
	２．ｐｈｐ服务器端语言
	３．ｐｈｐ的标记　<?php ?>
二、php基础语法
	１．变量：内存中存储临时数据的空间
		a.命名方法：$ + 字符串，
		b.弱类型语言：所以变量类型可以改变。变量类型和赋给他的值有关。
		$php = "string";//字符型
		$php = 1234;//整型
		c.必须以下划线或者字符开头，中间可以使用字符，数值，下划线，区别分大小写。
	２．可变变量：就是把一个变量的值作为另一个变量的名
		$var = "aaaa";
		$$var = "bbbb";
		echo $aaaa;//bbbb
	3.外部变量：$_GET[] $_POST[] $_REQUEST[]
	4.引用变量：就是将变量以传址的形式进行传递
		$aa = "111111111";
		$bb = &$aa;//;
		echo $aa;//1111111111
		$bb = "2222222";
		echo $aa;//22222222
	５．常量：值始终保持不变的单元
		常量的定义：define('常量名'，'值');
		常量区分大小写，命名建议大写，而且值必须是标量：string, int, float, bool.
		作用域：全局。
		系统常量：M_PI, PHP_OS, PHP_VERSION,　
	6.魔术常量
		__LINE__ :当前行数，　__FILE__:当前文件的路径　__FUNCTION__:　当前函数的
		__CLASS__:类名　__METHOD__ : 类名：：方法名
	７．变量、常量检测
		isset(变量名);//变量存在返回true,不存在返回false.
		defined(常量名);//常量存在返回true,不存在返回false.
三、数据类型
	１．php 类型
		标量类型：整形(int)、浮点型（flaot)、字符串(string)、布尔(boolean)
		符合类型：数组(array) 、　对象(object)
		其他类型：资源(resource) NULL
	2.整形、浮点型
		$num1 = 100;//整形
		$num2 = 0.1; //浮点型
	３.字符型
		$str = "string";//字符型
		单引号：单引号里面的引号只能是双引号或者是转义过的单引号，而且单引号里面不能其他的
		转义，单引号里面还不能识别变量，但是单引号的执行效率要比双引号的执行效率高。
		
		双引号：双引号里面的引号只能是单引号或者是转义过得双引号，双引号里面可以存放变量和
		其他转义符号，但是双引号里面的变量容易不被识别例如：
		$str = "string";
		$str1 = "123$str456";// 这样无法识别，因为php把$符号后面的都看成一个变量。
		$str1 = "123{$str}456";//这样就可以识别。
		定界符：
		<<<标识符
			ｓｔｒ
		标识符
	４．布尔型：TRUE FALSE
		为假的类型：
		１：FALSE 2:0 ３：0.0 4:空字符串　５：字符串０　６：NULL 7:空数组
	５．数组：由键值对组成的语言结构，可以使用print_r();输出数组。
		索引数组：就是指的是数组键是整数的数组，并且整数的顺序是从０开始依次类推。
			$arr = array("香蕉","苹果","鸭梨");
			$arr[０] //香蕉
			$arr[1]//苹果
			$arr[2]//鸭梨
		索引数组的赋值：
			a.直接变量名加[]
			$arr[0] = "苹果";
			b.使用array()建立一个空数组，使用=>符号分离键值进行赋值。
			$arr = array("0"=>"苹果","1"=>"香蕉","２"=>"鸭梨");
			c.使用array()建立一个空数组进行赋值。
			$arr = array("苹果","香蕉","鸭梨");
		索引数组元素的访问：
			索引数组直接使用数组变量加[下标]
			$arr = array("苹果","香蕉","鸭梨");
			$arr[1]//香蕉
			$arr[0]//苹果
		关联数组：指的是键是字符串的数组
			$arr = array(
				"apple" =>"苹果",
				"banana"=>"香蕉"
			);
		关联数组的赋值：
			$arr['apple'] = "苹果";
			$arr = array(
				"apple" =>"苹果",
				"banana"=>"香蕉"
			);
		访问关联数组：数组变量加['键']
	６．对象：具有一定属性和方法的集合。
	７．资源：外部文件、数据库资源、等等。
	８．数据类型判断
		gettype(变量，常量);返回值是数据类型，例如：array
		is_int() is_float() is_array() is_object() is_null() is_bool() is_resource()
		参数是变量或者是常量，返回值是bool值。
	９．数据类型转换
		自由转换：由于php是弱类型语言，所以只要改变变量值得类型，就可以改变变量的类型。
		强制转换：在变量前加(数据类型)，不作用于原变量，只生成新的结果
			$year = "2008年";
			$newyear = (int)$year;
		settype()：作用于原变量，改变原变量的数据类型。
			$aa = 11;//int
			settype($aa,"string");//string
		具体的转换函数：只能用于标量，不作用于原变量，只生成新的结果，intval();转换为整形，
		floatval();转换为浮点型，strval();转换为字符型。
		
四、运算符
	１．算数运算符
		加、减、乘、除、取余。
	２．递增、递减运算符
		$a = 11;
		$b = 22;
		$a = $a + $b;//与下面的等价
		$a += $b;
		$a = $a - $b;//与下面的等价
		$a -= $b;
		//自增(减)运算符
		$b = $a++;//等价于
		$b = $a;
		$a = $a+1;
	３．比较运算符 
		> 大于　<　小于　<= 小于等于　>= 大于等于　<> != 不等于　!== 不全等于
		== 等于　=== 全等于
	４．逻辑运算符
		与：&& /and ，运算符两边同时为真时，为真。
		或：|| / or　，运算符两边有一边为真时，为真。
		非：！/ not ，　当为真值时返回假值，假值时返回真值。
		异或：　xor ，　运算符两边只有一个值为真时，返回真，其他时都返回假值。
	５．位运算符
	６．其他运算符
		
			
			
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
