一、什么是json
	JSON 指的是 JavaScript 对象表示法（JavaScript Object Notation）
	JSON 是轻量级的文本数据交换格式
	JSON 独立于语言 *
	JSON 具有自我描述性，更易理解
	{
	"sites": [
		{ "name":"菜鸟教程" , "url":"www.runoob.com" }, 
		{ "name":"google" , "url":"www.google.com" }, 
		{ "name":"微博" , "url":"www.weibo.com" }
	]
	}
二、json的xml的相同点和不同点
		1.与 XML 相同之处
			JSON 是纯文本
			JSON 具有"自我描述性"（人类可读）
			JSON 具有层级结构（值中存在值）
			JSON 可通过 JavaScript 进行解析
			JSON 数据可使用 AJAX 进行传输
		2.与 XML 不同之处
			没有结束标签
			更短
			读写的速度更快
			能够使用内建的 JavaScript eval() 方法进行解析
			使用数组
			不使用保留字

三、语法
	1.JSON 语法规则
		JSON 语法是 JavaScript 对象表示法语法的子集。
		数据在名称/值对中
		数据由逗号分隔
		花括号保存对象
		方括号保存数组
	2.JSON 名称/值对
		JSON 数据的书写格式是：名称/值对。
		名称/值对包括字段名称（在双引号中），后面写一个冒号，然后是值：
		"name" : "菜鸟教程"
		这很容易理解，等价于这条 JavaScript 语句：
		name = "菜鸟教程"
	3.JSON 值
		JSON 值可以是：
		数字（整数或浮点数）
		字符串（在双引号中）
		逻辑值（true 或 false）
		数组（在方括号中）
		对象（在花括号中）
		null
	4.JSON 对象
		JSON 对象在花括号中书写：
		对象可以包含多个名称/值对：
		{ "name":"菜鸟教程" , "url":"www.runoob.com" }
		这一点也容易理解，与这条 JavaScript 语句等价：
		name = "菜鸟教程"
		url = "www.runoob.com"

	5.JSON 数组
		JSON 数组在方括号中书写：
		数组可包含多个对象：
		{
		"sites": [
		{ "name":"菜鸟教程" , "url":"www.runoob.com" }, 
		{ "name":"google" , "url":"www.google.com" }, 
		{ "name":"微博" , "url":"www.weibo.com" }
		]
		}
		在上面的例子中，对象 "employees" 是包含三个对象的数组。每个对象代表一条关于某人（有姓和名）的记录。
	6.JSON 使用 JavaScript 语法
		因为 JSON 使用 JavaScript 语法，所以无需额外的软件就能处理 JavaScript 中的 JSON。
		通过 JavaScript，您可以创建一个对象数组，并像这样进行赋值：
		实例
		var sites = [
			{ "name":"runoob" , "url":"www.runoob.com" }, 
			{ "name":"google" , "url":"www.google.com" }, 
			{ "name":"微博" , "url":"www.weibo.com" }
		];
		可以像这样访问 JavaScript 对象数组中的第一项（索引从 0 开始）：
		sites[0].name;
		返回的内容是：
		runoob
		可以像这样修改数据：
		sites[0].name="菜鸟教程";
	7.JSON 文件
		JSON 文件的文件类型是 ".json"
		JSON 文本的 MIME 类型是 "application/json"
四、使用
	 1、JSON字符串转换为JSON对象

		要运用上面的str1，必须运用下面的要领先转化为JSON对象：

		//由JSON字符串转换为JSON对象

		var obj = eval('(' + str + ')');

		或者

		var obj = str.parseJSON(); //由JSON字符串转换为JSON对象

		或者

		var obj = JSON.parse(str); //由JSON字符串转换为JSON对象

		然后，就可以这样读取：

		Alert(obj.name);

		Alert(obj.sex);

		特别留心：如果obj本来就是一个JSON对象，那么运用 eval（）函数转换后
		（哪怕是多次转换）还是JSON对象，但是运用 parseJSON（）函数处理后会有疑问（抛出语法异常）。

    2、可以运用 toJSONString()或者全局要领 JSON.stringify()将JSON对象转化为JSON字符串。

		例如：

		var last=obj.toJSONString(); //将JSON对象转化为JSON字符

		或者

		var last=JSON.stringify(obj); //将JSON对象转化为JSON字符

		alert(last);

		留心：

    	上面的多个要领中，除了eval()函数是js自带的之外，其他的多个要领都来自json.js包。
    	新版本的 JSON 修改了 API，将 JSON.stringify() 和 JSON.parse() 两个要领都
    	注入到了 Javascript 的内建对象里面，前者变成了 Object.toJSONString()，
    	而后者变成了 String.parseJSON()。如果提示找不到toJSONString()和parseJSON()要领，
    	则说明您的json包版本太低。
	






































